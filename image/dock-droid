#!/usr/bin/docker
#     ___              _         ___              _      _             
#    /   \ ___    ___ | | __    /   \ _ __  ___  (_)  __| |
#   / /\ // _ \  / __|| |/ /   / /\ /| '__|/ _ \ | | / _` |
#  / /_//| (_) || (__ |   <   / /_// | |  | (_) || || (_| |
# /___,'  \___/  \___||_|\_\ /___,'  |_|   \___/ |_| \__,_|
#
# Title:            Dock-Droid (Docker Android)
# Author:           Sick.Codes https://twitter.com/sickcodes
# Version:          1.0
# License:          GPLv3+
# Repository:       https://github.com/sickcodes/dock-droid
# Website:          https://sick.codes
#
# This Dockerfile is a wrapper for Android x86 raw or qcow2 images.
# 
# Build:
#       docker build -t dock-droid .

FROM archlinux:base-devel

SHELL ["/bin/bash", "-c"]

RUN sudo pacman -S qemu libvirt dnsmasq virt-manager bridge-utils flex bison iptables-nft edk2-ovmf

RUN sudo systemctl enable --now libvirtd && sudo systemctl enable --now virtlogd && echo 1 | sudo tee /sys/module/kvm/parameters/ignore_msrs && sudo modprobe kvm

# OPTIONAL: Arch Linux server mirrors for super fast builds
ARG RANKMIRRORS
ARG MIRROR_COUNTRY=US
ARG MIRROR_COUNT=10

RUN if [[ "${RANKMIRRORS}" ]]; then \
        { pacman -Sy wget --noconfirm || pacman -Syu wget --noconfirm ; } \
        ; wget -O ./rankmirrors "https://raw.githubusercontent.com/sickcodes/dock-droid/master/rankmirrors" \
        ; wget -O- "https://www.archlinux.org/mirrorlist/?country=${MIRROR_COUNTRY:-US}&protocol=https&use_mirror_status=on" \
        | sed -e 's/^#Server/Server/' -e '/^#/d' \
        | head -n "$((${MIRROR_COUNT:-10}+1))" \
        | bash ./rankmirrors --verbose --max-time 5 - > /etc/pacman.d/mirrorlist \
        && tee -a /etc/pacman.d/mirrorlist <<< 'Server = http://mirrors.evowise.com/archlinux/$repo/os/$arch' \
        && tee -a /etc/pacman.d/mirrorlist <<< 'Server = http://mirror.rackspace.com/archlinux/$repo/os/$arch' \
        && tee -a /etc/pacman.d/mirrorlist <<< 'Server = https://mirror.rackspace.com/archlinux/$repo/os/$arch' \
        && cat /etc/pacman.d/mirrorlist \
    ; fi

RUN pacman -Syu git zip vim nano alsa-utils openssh unzip usbutils --noconfirm \
    && ln -s /bin/vim /bin/vi \
    && useradd arch -p arch \
    && tee -a /etc/sudoers <<< 'arch ALL=(ALL) NOPASSWD: ALL' \
    && mkdir /home/arch \
    && chown arch:arch /home/arch

# allow ssh to container
RUN mkdir -m 700 /root/.ssh

WORKDIR /root/.ssh
RUN touch authorized_keys \
    && chmod 644 authorized_keys

WORKDIR /etc/ssh
RUN tee -a sshd_config <<< 'AllowTcpForwarding yes' \
    && tee -a sshd_config <<< 'PermitTunnel yes' \
    && tee -a sshd_config <<< 'X11Forwarding yes' \
    && tee -a sshd_config <<< 'PasswordAuthentication yes' \
    && tee -a sshd_config <<< 'PermitRootLogin yes' \
    && tee -a sshd_config <<< 'PubkeyAuthentication yes' \
    && tee -a sshd_config <<< 'HostKey /etc/ssh/ssh_host_rsa_key' \
    && tee -a sshd_config <<< 'HostKey /etc/ssh/ssh_host_ecdsa_key' \
    && tee -a sshd_config <<< 'HostKey /etc/ssh/ssh_host_ed25519_key'

USER arch

ENV USER arch

WORKDIR /home/arch

RUN git clone https://aur.archlinux.org/android-sdk-platform-tools.git \
    && cd android-sdk-platform-tools \
    && makepkg -si --nocheck --force --noconfirm \
    ; source /etc/profile.d/android-sdk-platform-tools.sh || exit 1

RUN git clone https://aur.archlinux.org/binfmt-qemu-static.git \
    && cd binfmt-qemu-static \
    && makepkg -si --nocheck --force --noconfirm || exit 1

RUN git clone https://aur.archlinux.org/qemu-user-static-bin.git \
    && cd qemu-user-static-bin \
    && makepkg -si --nocheck --force --noconfirm || exit 1


WORKDIR /home/arch

# optional --build-arg to change branches for testing
ARG BRANCH=master
ARG REPO='https://github.com/sickcodes/dock-droid.git'
RUN git clone --recurse-submodules --depth 1 --branch "${BRANCH}" "${REPO}"

WORKDIR /home/arch/dock-droid

RUN touch ./enable-ssh.sh \
    && chmod +x ./enable-ssh.sh \
    && tee -a enable-ssh.sh <<< '[[ -f /etc/ssh/ssh_host_rsa_key ]] || \' \
    && tee -a enable-ssh.sh <<< 'sudo /usr/bin/ssh-keygen -A' \
    && tee -a enable-ssh.sh <<< 'nohup sudo /usr/bin/sshd -D &'

RUN yes | sudo pacman -Syu qemu virglrenderer libvirt dnsmasq virt-manager bridge-utils openresolv jack ebtables edk2-ovmf netctl libvirt-dbus wget --overwrite --noconfirm \
    && yes | sudo pacman -Scc

ARG LINUX=true

ARG COMPLETE=true

ARG CDROM_IMAGE_URL=https://sourceforge.net/projects/blissos-x86/files/Official/bleeding_edge/Generic%20builds%20-%20Pie/11.13/Bliss-v11.13--OFFICIAL-20201113-1525_x86_64_k-k4.19.122-ax86-ga-rmi_m-20.1.0-llvm90_dgc-t3_gms_intelhd.iso
ENV CDROM_IMAGE_URL="${CDROM_IMAGE_URL}"

ARG WGET_OPTIONS=

RUN if [[ "${COMPLETE}" ]]; then \
        echo "Downloading 1GB image... This step might take a while... Press Ctrl+C if you want to abort." \
        && wget ${WGET_OPTIONS} "${CDROM_IMAGE_URL}" || exit 1 \
    ; fi

ARG QCOW_SIZE=50G

RUN qemu-img create -f qcow2 /home/arch/dock-droid/android.qcow2 "${QCOW_SIZE}"

# Run SDL and QEMU with WebGL acceleration
RUN touch Launch.sh \
    && chmod +x ./Launch.sh \
    && tee -a Launch.sh <<< '#!/bin/bash' \
    && tee -a Launch.sh <<< 'set -eux' \
    && tee -a Launch.sh <<< 'source /etc/profile.d/android-sdk-platform-tools.sh' \
    && tee -a Launch.sh <<< 'sudo qemu-system-x86_64 -m ${RAM:-4}000 \' \
    && tee -a Launch.sh <<< '-enable-kvm \' \
    && tee -a Launch.sh <<< '-cpu host \' \
    && tee -a Launch.sh <<< '-display sdl,gl=on \' \
    && tee -a Launch.sh <<< '-device virtio-gpu-gl-pci \' \
    && tee -a Launch.sh <<< '-hda /home/arch/dock-droid/android.qcow2 \' \
    && tee -a Launch.sh <<< '-cdrom "${CDROM}" \' \
    && tee -a Launch.sh <<< '-usb -device usb-host,hostbus=3,hostaddr=3 \' \
    && tee -a Launch.sh <<< '-smp $(nproc) \' \
    && tee -a Launch.sh <<< '-monitor stdio \' \
    && tee -a Launch.sh <<< '-netdev user,id=net0,hostfwd=tcp::5555-:5555 \' \
    && tee -a Launch.sh <<< '-device e1000,netdev=net0'

CMD export CDROM="${CDROM:="$(basename "${CDROM_IMAGE_URL}")"}" \
    && ./enable-ssh.sh \
    && /bin/bash -c ./Launch.sh
